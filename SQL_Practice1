CREATE DATABASE TEST2;
USE TEST2;

-- 1. CREATING TABLES

-- DEPARTMENTS

CREATE TABLE DEPARTMENTS(
DEPT_ID INT PRIMARY KEY,
DEPT_NAME VARCHAR(50) UNIQUE NOT NULL,
MANAGER_ID INT
);

-- EMPLOYEES

CREATE TABLE EMPLOYEES (
EMP_ID INT PRIMARY KEY,
F_NAME VARCHAR(50) NOT NULL,
L_NAME VARCHAR(50) NOT NULL,
EMAIL VARCHAR(100) UNIQUE NOT NULL,
PHONE VARCHAR(15) NOT NULL,
HIREDATE DATETIME DEFAULT CURRENT_TIMESTAMP,
SALARY decimal(10,2) CHECK(SALARY>0),
DEPT_ID INT,
FOREIGN KEY(DEPT_ID) REFERENCES DEPARTMENTS(DEPT_ID)
);

-- PROJECTS

CREATE TABLE PROJECTS(
PROJ_ID INT PRIMARY KEY,
PROJ_NAME VARCHAR(50) UNIQUE NOT NULL,
BUDGET DECIMAL(10,2) CHECK(BUDGET>0),
DEPT_ID INT,
FOREIGN KEY(DEPT_ID) REFERENCES DEPARTMENTS(DEPT_ID)
);

-- EMPLOYEE PROJECTS

CREATE TABLE EMPLOYEEPROJECTS(
EMP_ID INT,
FOREIGN KEY(EMP_ID) REFERENCES EMPLOYEES(EMP_ID),
PROJ_ID INT,
FOREIGN KEY(PROJ_ID) REFERENCES PROJECTS(PROJ_ID),
ROLE VARCHAR(50) NOT NULL,
ALLOCATION_PERCENT INT CHECK(ALLOCATION_PERCENT BETWEEN 0 AND 100)
);

-- 2. ALTER TABLE

ALTER TABLE EMPLOYEES ADD JOBTITLE VARCHAR(50);

-- 3. DROP TABLE

DROP TABLE EMPLOYEEPROJECTS;

-- 4.INSERT

-- DEPARTMENTS

INSERT INTO DEPARTMENTS (DEPT_ID, DEPT_NAME,MANAGER_ID) VALUES
(1,'HR',101),
(2,'IT',102),
(3,'SALES',103);

-- 5. UPDATE

UPDATE EMPLOYEES
SET SALARY = SALARY * 1.1
WHERE DEPT_ID = (SELECT DEPT_ID FROM DEPARTMENTS WHERE DEPT_NAME='IT');

-- 6. DELETE

DELETE FROM EMPLOYEES WHERE EMP_ID=101;

-- 7. RETRIEVE DATA

SELECT * FROM EMPLOYEES WHERE DEPT_ID=(SELECT DEPT_ID FROM DEPARTMENTS WHERE DEPT_NAME='SALES');

-- 8.AGGREGATION

SELECT SUM(BUDGET) AS TOTALBUDGET FROM PROJECTS WHERE DEPT_ID=(SELECT DEPT_ID FROM DEPARTMENTS WHERE DEPT_NAME='IT');

-- 9.JOIN

SELECT E.F_NAME,E.L_NAME,P.PROJ_NAME FROM EMPLOYEES E JOIN EMPLOYEEPROJECTS EP ON E.EMP_ID=EP.EMP_ID 
JOIN PROJECTS P ON EP.PROJ_ID=P.PROJ_ID;

-- 10.NVL

SELECT F_NAME,L_NAME,COALESCE(PHONE,'NOT PROVIDED') AS CONTACT FROM EMPLOYEES;

INSERT INTO EMPLOYEES(EMP_ID,F_NAME,L_NAME,EMAIL,PHONE,HIREDATE,SALARY,DEPT_ID) VALUES
(1,'ANKIT','MONDAL','a@gmail.com','9123456780','2024-04-21','400000',1),
(2,'SUCHETA','MANDAL','s@gmail.com','8123456790','2024-03-22','500000',2),
(3,'RAHUL','KUNDU','r@gmail.com','7123456890','2024-05-25','300000',3);

UPDATE EMPLOYEES
SET JOBTITLE='HR' WHERE EMP_ID=1;

UPDATE EMPLOYEES
SET JOBTITLE='IT' WHERE EMP_ID=2;

UPDATE EMPLOYEES
SET JOBTITLE='SALES' WHERE EMP_ID=3;

-- 11.STRING FUNCTIONS

SELECT UPPER(F_NAME) AS FIRST_NAME,LOWER(L_NAME) AS LAST_NAME FROM EMPLOYEES;

-- 12. GRANT

GRANT SELECT,INSERT ON EMPLOYEES TO HR_USER;

-- 13.REVOKE

REVOKE INSERT ON EMPLOYEES FROM HR_USER;

-- 14.TRANSACTION

BEGIN;
DELETE FROM EMPLOYEES WHERE EMP_ID=3;
ROLLBACK;

-- 15.INDEXING

CREATE INDEX IDX_EMAIL ON EMPLOYEES(EMAIL);

-- 16. NORMALIZATION
-- CREATING TABLES AND INSERTING VALUES

CREATE TABLE Department (
    DeptID INT PRIMARY KEY,
    DeptName VARCHAR(100) NOT NULL
);

-- Insert data
INSERT INTO Department (DeptID, DeptName)
VALUES
(101, 'Engineering'),
(102, 'Marketing');

CREATE TABLE Employee (
    EmployeeID INT PRIMARY KEY,
    EmployeeName VARCHAR(100) NOT NULL,
    DeptID INT NOT NULL,
    FOREIGN KEY (DeptID) REFERENCES Department(DeptID)
);

-- Insert data
INSERT INTO Employee (EmployeeID, EmployeeName, DeptID)
VALUES
(1, 'Ankit Mondal', 101),
(2, 'Sucheta Mandal', 102),
(3, 'Rahul Kundu', 101);

CREATE TABLE Project (
    ProjectID INT PRIMARY KEY,
    ProjectName VARCHAR(100) NOT NULL
);

-- Insert data
INSERT INTO Project (ProjectID, ProjectName)
VALUES
(201, 'AI Development'),
(202, 'Ad Campaign');

CREATE TABLE EmployeeProject (
    EmployeeID INT,
    ProjectID INT,
    Role VARCHAR(50),
    Hours INT,
    PRIMARY KEY (EmployeeID, ProjectID),
    FOREIGN KEY (EmployeeID) REFERENCES Employee(EmployeeID),
    FOREIGN KEY (ProjectID) REFERENCES Project(ProjectID)
);

-- Insert data
INSERT INTO EmployeeProject (EmployeeID, ProjectID, Role, Hours)
VALUES
(1, 201, 'Team Leader', 40),
(2, 202, 'Consultant', 30),
(3, 201, 'Developer', 35);

-- To Get Employee Details with Department Names
SELECT E.EmployeeID,E.EmployeeName,D.DeptName FROM Employee E JOIN Department D ON E.DeptID=D.DeptID;

-- To Get Employees and Their Projects
SELECT E.EmployeeID,E.EmployeeName,P.ProjectName,EP.Role,EP.Hours FROM EmployeeProject EP
JOIN Employee E ON EP.EmployeeID=E.EmployeeID JOIN Project P ON EP.ProjectID=P.ProjectID;

-- To Get Projects and Their Teams
SELECT P.ProjectName, E.EmployeeName,EP.Role FROM EmployeeProject EP 
JOIN Project P ON EP.ProjectID=P.ProjectID JOIN Employee E ON EP.EmployeeID=E.EmployeeID;
